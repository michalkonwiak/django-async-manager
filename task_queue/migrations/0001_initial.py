# Generated by Django 4.2 on 2025-03-08 19:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("canceled", "Canceled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "low"),
                            (2, "medium"),
                            (3, "high"),
                            (4, "critical"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "arguments",
                    models.JSONField(help_text="JSON containing function arguments"),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="Task will run at this time", null=True
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "timeout",
                    models.IntegerField(
                        default=300, help_text="Max execution time in seconds"
                    ),
                ),
                ("attempts", models.IntegerField(default=0)),
                (
                    "max_retries",
                    models.IntegerField(
                        default=3,
                        help_text="Max number of retries before marking as failed",
                    ),
                ),
                (
                    "worker_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier of the worker that processed this task",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "last_errors",
                    models.JSONField(
                        default=list, help_text="Stores last 5 error messages"
                    ),
                ),
                (
                    "archived",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this task is archived for performance reasons",
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dependent_tasks",
                        to="task_queue.task",
                    ),
                ),
            ],
            options={
                "ordering": ["priority", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["status"], name="task_queue__status_d111a9_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["priority"], name="task_queue__priorit_ade383_idx"
            ),
        ),
    ]
